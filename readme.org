[[https://github.com/minad/corfu/blob/screenshots/emacs.svg?raw=true]]

* Citar-Denote: Literature notes for Denote
Literature is the lifeblood of researchers. New ideas form when taking notes based on reading books ad articles. Note-taking systems are, therefore, often connected to a bibliographic database (such as a BibTeX file), which assists with creating and finding notes related to books, articles and other reference types. Bibliographic databases are helpful because they provide access to related materials, links to online sources and stored electronic versions of relevant books or articles.

Within Emacs, the [[https://protesilaos.com/emacs/denote][Denote package]] provides a minimalist approach to creating and managing notes in Emacs.

Several Emacs packages are available that can link bibliography files to notes. The [[https://joostkremers.github.io/ebib/][Ebib]], [[https://github.com/tmalsburg/helm-bibtex][Helm-BibTeX and Ivy-BibTeX]] each use their own completion system. The [[https://github.com/emacs-citar/citar][Citar]] package is closest to the Denote philosophy as it uses minibuffer completion and integrates perfectly with the popular Vertico - Marginalia - Consult - Embark toolchain.

The default behaviour for these bibliography managers is that the filename for the relevant note includes the citation key (e.g. =einstein_1905.org=) so it can be linked to the BibTeX entry. Other systems, such as Org Roam, use a database for this purpose. Unfortunately, these approaches are impractical because Denote relies on a strict file naming convention.

The /Citar-Denote/ package enables accessing and creating Denote notes through the Citar bibliography management package. The relationship between citation keys and note files is stored in a cache created when first starting Citar. The citation key for each note is located in the =reference= line in the front matter.

* Functionality
** Create bibliographic notes
Open the Citar interface (=citar-create-note=), select the entry you want to create a note for, and hit =ENTER=.

A new note is created in the Denote folder with the title of the BibTeX entry as the defsault title. You can edit the name of the note and select file tags with the usual Denote menu.

The package uses the default file type set by the =denote-file-type= variable, which you can override with =citar-denote-file-type=. The Citar-Denote package works with all Denote file types (Org Mode, Markdown (YAML and TOML) and plain text).

The =bib= file tag is added by default. This tag is required to easily find all notes related to a publication. Using this tag saves time by only checking bibliographic notes for references. The =citar-denote-keyword= variable allows you to change the tag to something else. You will have to update notes that already have a bibliography keyword as the package only recognises one.

The package adds the citation key to the front matter, e.g. =#+reference: einstein_1905= for an Org Mode file. This line and the file tag link relate the note file to the BibTeX entry. Any changes to this line or the bibliography file tag breaks that link.

You can create bibliographic notes manually by adding the =bib= file tag and a reference line with citation key.

One note can only have one citation key, but each reference can have multiple notes. So, for example, you could create a note about each book chapter.

** Access bibliographic notes
When opening the Citar bibliography menu, The =citar-denote-get-notes= function checks all Denote files tagged with the "bib" keyword and reads the relevant references. This initialisation can take a few seconds if you have lots of bibliographic notes.

Use =citar-open-notes= to open the bibliographic menu. Citar indicates the existence of notes with a flag in the second column. Filtering the list of citations with =:n= shows only entries with notes. Hit enter and select the Denote Notes you like to open.

#+caption: Screenshot with Vertico and symbol customisation.
[[file:citar-menu.png]]

* Installation
Clone this page with =git clone https://github.com/pprevos/citar-denote= and add the following code to your =init= file (change the folder location to suit yours):

#+begin_src elisp
  (add-to-list 'load-path "~/.config/emacs/github/citar-denote")
  (require 'citar-denote)
  (citar-denote-mode)
#+end_src

Citar-Denote ignores the =citar-notes-paths= variable as it assumes that bibliographic notes are part of the Denote collection.

* Acknowledgements
This code would only have existed with the help of Protesilaos Stavrou, developer of Denote and Citar developer Bruce D'Arcus. Joel Lööw and Noboru Ota added significant contributions, without which this package would be useless.
