#+title: Denote-Citar
#+date: [2022-07-23 Sat]

One of the major tasks in the research workflow is to reflect on the literature you read. Emacs has various packages to create and maintain bibliography files through the Bib TeX format (=.bib= files). These packages have five main objectives:

- Create or edit bib files
- Provide access to your bibliographies (searching, narrowing etc)
- Insert citations in various major modes (Org, Markdown, LaTeX)
- Link to associated attachments
- Link to associated notes

| Function                 | Packages                             |
|--------------------------+--------------------------------------|
| Create or edit bib files | bibtex-mode (built-in), ebib         |
| Access bib files         | ebib, ivy-bibtex, helm-bibtex, citar |
| Insert citations         | org, org-ref, ebib                   |
| Access attachments       | ebib, ivy-bibtex, helm-bibtex, citar |
| Access to notes          | roam-bibtex, zetteldesk-ref          |

Emacs has various note-taking packages, some of which can be integrated with a bibliography. For an example of such an integration, read my article on [[https://lucidmanager.org/productivity/emacs-bibtex-mode/][linking a bibliography to Org Roam]]. The new Denote package by Protesilaos Stavrou does not yet have such functionality, which is my motivation to develop my first Emacs package.

* Literature notes in Denote
The recent Denote package provides a minimalist approach to notes, but none of the BibTeX integrators mentioned above is compatible with Denote's strict file naming conventions.

The Ebib, Helm-BibTeX and Ivy-BibTeX each use their own completion system. The Citar package is closest to the philosophy behind Denote as it uses minibuffer completion and integrates with the popular Vertico, Marginalia, Consult and Embark tool chain.

The /Denote-Citar/ package enables accessing and creating Denote notes through the Citar bibliography management package.

This code would not have existed without the help of Protesilaos Stavrou, developer of Denote.

** Create bibliographic notes
The =citar-create-note= function lets the user create a new note for the selected bibliographic entry.

- The note uses the current date and time to generate the identifier.
- The title of the note is the citation key. Titles in Denote file names cannot contain underscores but citation keys can and often do. Underscores are thus replaced by dashes to conform with the Denote file naming convention.
- The package also adds a standard keyword to the file. The default is =bib=, but this can be configured through the =denote-citar-keyword= variable. 
- Lastly, /Denote-Citar/ adds a line with the citation key to the front matter, e.g.: =#+reference: stalman_1985=. This reference line will late be used to inform Citar which note relates to which citation key.

** Access bibliographic notes
This functionality is not yet available.

* Installation
- Clone this page with =git clone https://github.com/pprevos/denote-citar=
- Add the location of the =denote-citar= folder to your path
- Activate the package

#+begin_src elisp
  (add-to-list 'load-path "~/.config/emacs/github/denote-citar")
  (require 'denote-citar)
  (setq citar-notes-paths denote-directory)
#+end_src

* Todo
- [ ] Refactor code: [[https://github.com/orgs/emacs-citar/discussions/666#discussioncomment-3214026][bdarcus]]
- [ ] Write function to integrate Denote with the =citar-open-notes= function.
- [ ] Improve note-creation
  - [ ] Add configurable option to construct note title from BibTeX entry, e.g. author and title
  - [ ] Add option to edit the title in the note creation workflow
- [ ] Create bibliography files for Markdown and text files
- [ ] Function to access attachments from note reference
- [ ] Write blog post about managing bibliography notes with Denote
